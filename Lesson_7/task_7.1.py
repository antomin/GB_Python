"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31  43      3   5  32       3   5   8   3
22  51      2   4   6       8   3   7   1
37  86     -1  64  -8

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.

Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух
матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и т.д."""


class SumMatrix:
    def __init__(self, mtx_list):
        self.mtx_list = mtx_list

    def __str__(self):
        mtx_str = ''
        for el in self.mtx_list:
            mtx_str += (' '.join(map(str, el)) + '\n')
        return mtx_str

    def __add__(self, other):
        if [len(i) for i in self.mtx_list] == [len(i) for i in other.mtx_list]:
            res = [list(map(sum, zip(*el))) for el in zip(self.mtx_list, other.mtx_list)]
            return SumMatrix(res)
        else:
            return 'Матрицы не соразмерны!'


mtx_a = SumMatrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
mtx_b = SumMatrix([[10, 20, 30], [40, 50, 60], [70, 80, 90]])

print(mtx_a)
print(mtx_b)
print(mtx_a + mtx_b)
